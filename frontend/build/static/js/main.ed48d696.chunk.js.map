{"version":3,"sources":["contexts/BookContext.js","components/BookCard.js","contexts/AuthyContext.js","components/BooksResult.js","contexts/SearchContext.js","pages/Home.js","pages/ChosenBook.js","App.js","reportWebVitals.js","index.js"],"names":["BookContext","createContext","BookCard","publication_year","averageRating","bookImage","title","useContext","setBook","className","Image","floated","size","src","Button","as","Link","to","color","basic","value","onClick","e","currentTarget","id","AuthyContext","parseString","require","BooksResult","authy","console","log","useEffect","isMounted","authorId","undefined","a","result","axios","data2","books2","books3","authorImage","authorName","xml","data","err","GoodreadsResponse","author","about","books","book","name","image_url","i","length","push","about_book","description","replace","average_rating","link","num_pages","uri","authors","ratings_count","setData3","setAuthorImage","setAuthorName","setData2","replaceAll","fetchData2","useState","data3","style","fontSize","sort","b","parseFloat","map","x","SearchContext","Home","search","setSearch","String","prototype","toProperCase","this","txt","charAt","toUpperCase","substr","toLowerCase","AbortController","array","results","work","author2","best_book","_","filteredData","filter","setAuthy","setError","fetchData","error","useForm","register","handleSubmit","errors","React","localStorage","setItem","JSON","stringify","onSubmit","toString","type","placeholder","ref","required","ChosenBook","App","Provider","exact","path","component","render","pathname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ed48d696.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const BookContext = createContext({});\n","import React, { useContext } from \"react\";\nimport { Button, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { BookContext } from \"../contexts/BookContext\";\n\nfunction BookCard({ publication_year, averageRating, bookImage, title }) {\n  const [book, setBook] = useContext(BookContext);\n\n  return (\n    <div className=\"bookCard\">\n      <Image\n        floated=\"right\"\n        size=\"mini\"\n        className=\"bookImage\"\n        src={bookImage}\n      />\n      <div className=\"boldy\">\n        <b>Title </b>\n      </div>\n      <div className=\"boldy2\">{title}</div>\n      <div className=\"boldy\">\n        <b>Publication year </b>\n      </div>\n      <div className=\"boldy2\">{publication_year}</div>\n      <div className=\"boldy\">\n        <b>Average Rating </b>\n      </div>\n      <div className=\"boldy2\">{averageRating}</div>\n\n      <Button className=\"button\" as={Link} to={`/${title}`}>\n        <Button\n          color=\"blue\"\n          basic\n          key={title.id}\n          value={title}\n          onClick={(e) => setBook(e.currentTarget.value)}\n        >\n          View\n        </Button>\n      </Button>\n    </div>\n  );\n}\nexport default BookCard;\n","import { createContext } from \"react\";\n\nexport const AuthyContext = createContext({});\n","import React, { useEffect, useState, useContext, useMemo } from \"react\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport BookCard from \"./BookCard\";\nimport { Image } from \"semantic-ui-react\";\nimport { AuthyContext } from \"../contexts/AuthyContext\";\n//import { SearchContext } from \"../contexts/SearchContext\";\n\nvar parseString = require(\"xml2js\").parseString;\n\nconst BooksResult = () => {\n  //const [searchy, setSearchy] = useContext(SearchContext);\n\n  const [authy, setAuthy] = useContext(AuthyContext);\n  console.log(authy);\n  useEffect(() => {\n    let isMounted = true; // note this flag denote mount status\n    let apiKey = \"ALVzK8NwSNC6KG0i7LIMgg\";\n\n    let authorId = \"\";\n    if (authy === undefined) {\n      authorId = 1265;\n    } else {\n      authorId = authy;\n    }\n\n    const fetchData2 = async () => {\n      let result = \"\";\n      if (isMounted) {\n        result = await axios(\n          `https://www.goodreads.com/author/show/${authorId}?format=xml&key=${apiKey}`\n        );\n      }\n      let data2 = [];\n      let books2 = \"\";\n      let books3 = \"\";\n      let test = \"\";\n      let authorImage = \"\";\n      let authorName = \"\";\n      const xml = result.data;\n      parseString(xml, function (err, result) {\n        books2 = result.GoodreadsResponse.author[0].about[0];\n        books3 = result.GoodreadsResponse.author[0].books[0].book;\n        authorName = result.GoodreadsResponse.author[0].name[0];\n        authorImage = result.GoodreadsResponse.author[0].image_url[0];\n        test = result.GoodreadsResponse.author[0].books[0];\n\n        for (let i = 0; i < books3.length; i++) {\n          data2.push({\n            about_book: books3[i].description[0]\n              .replace(/<[^>]*>?/gm, \"\")\n              .replace(/(?:https?|ftp):\\/\\/[\\n\\S]+/g, \"\"),\n            averageRating: books3[i].average_rating[0],\n            bookImage: books3[i].image_url[0],\n            link: books3[i].link[0],\n            num_pages: books3[i].num_pages[0],\n            publication_year: books3[i].publication_year[0],\n            title: books3[i].title[0],\n            uri: books3[i].uri[0],\n            authors: books3[i].authors[0],\n            ratings_count: books3[i].ratings_count[0],\n          });\n        }\n      });\n\n      setData3(data2);\n      setAuthorImage(authorImage);\n      setAuthorName(authorName);\n      setData2(\n        books2\n          .replace(/<[^>]*>?/gm, \"\")\n          .replace(/(?:https?|ftp):\\/\\/[\\n\\S]+/g, \"\")\n          .replaceAll(/-/gi, \"\")\n      );\n    };\n\n    fetchData2();\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const [authorImage, setAuthorImage] = useState(\"\");\n  const [data2, setData2] = useState([]);\n  const [data3, setData3] = useState([]);\n  const [authorName, setAuthorName] = useState([]);\n\n  return (\n    <div>\n      <h1 className=\"title\">{authorName}</h1>\n      <Image size=\"mini\" src={authorImage} />\n      <br></br>\n      <div className=\"container-2\">\n        <div className=\"description\" style={{ fontSize: 12 }}>\n          {data2 ? data2 : \"Sorry, there is no description for this author :(\"}\n        </div>\n        <br></br>\n        <div className=\"container-1\">\n          {data3\n            .sort(\n              (a, b) =>\n                parseFloat(b.averageRating) - parseFloat(a.averageRating)\n            )\n            .map((x) => (\n              <div key={x.title} className=\"col-md-6\" className=\"boxer\">\n                <BookCard\n                  title={x.title}\n                  bookImage={x.bookImage}\n                  about_book={x.about_book}\n                  averageRating={x.averageRating}\n                  publication_year={x.publication_year}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n      <br></br>\n    </div>\n  );\n};\nexport default BooksResult;\n","import { createContext } from \"react\";\n\nexport const SearchContext = createContext({});\n","import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport BookResult from \"../components/BooksResult\";\n//import { Grid } from \"semantic-ui-react\";\nimport { useForm } from \"react-hook-form\";\nimport { AuthyContext } from \"../contexts/AuthyContext\";\nimport { SearchContext } from \"../contexts/SearchContext\";\n\nvar parseString = require(\"xml2js\").parseString;\n\nconst Home = () => {\n  const [search, setSearch] = useContext(SearchContext);\n\n  String.prototype.toProperCase = function () {\n    return this.replace(/\\w\\S*/g, function (txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  };\n\n  let author = \"\";\n  try {\n    author = search.toProperCase();\n  } catch {\n    author = \"Jane Austen\";\n  }\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    let apiKey = \"ALVzK8NwSNC6KG0i7LIMgg\";\n\n    const fetchData = async () => {\n      const result = await axios(\n        `https://www.goodreads.com/search/index.xml?key=${apiKey}&q=${author}`\n      );\n\n      let books = \"\";\n      let array = [];\n      let filteredData = [];\n      const xml = result.data;\n      parseString(xml, function (err, result) {\n        books = result.GoodreadsResponse.search[0].results[0].work;\n        if (books) {\n          for (let i = 0; i < books.length; i++) {\n            array.push({\n              author2: books[i].best_book[0].author[0].name[0],\n              authorId: books[i].best_book[0].author[0].id[0]._,\n            });\n          }\n        }\n      });\n\n      filteredData = array.filter((x) => x.author2 === author);\n\n      try {\n        setAuthy(filteredData[0].authorId);\n      } catch {\n        setError(\"error\");\n      }\n    };\n\n    fetchData();\n  }, [search]);\n\n  const [authy, setAuthy] = useContext(AuthyContext);\n\n  const [error, setError] = useState(\"\");\n\n  const { register, errors, handleSubmit } = useForm();\n\n  const onSubmit = (data) => {\n    setError(\"\");\n\n    setSearch(data.author.toString());\n  };\n  /*\n  React.useEffect(() => {\n    const data2 = localStorage.getItem(\"chosen-author\");\n    if (data2) {\n      setAut(JSON.parse(data2));\n    }\n  }, []);\n*/\n\n  React.useEffect(() => {\n    localStorage.setItem(\"chosen-author\", JSON.stringify(authy));\n  });\n\n  return (\n    <div className=\"home\">\n      <br></br>\n      <div>\n        <h1 className=\"title\">Goodreads API Search</h1>\n      </div>\n      <div className=\"title\">Search for your favourite author!</div>\n      <br></br>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          type=\"text\"\n          placeholder=\"e.g. Plato\"\n          name=\"author\"\n          ref={register({ required: true })}\n        />\n        <input type=\"submit\" />\n      </form>\n      <div></div>\n\n      {error ? (\n        <div className=\"sorry\">\n          Sorry, we couldn't find what you were looking for. Search again!\n        </div>\n      ) : (\n        <BookResult authy={authy} key={authy} />\n      )}\n      <br></br>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport { Image } from \"semantic-ui-react\";\nimport { AuthyContext } from \"../contexts/AuthyContext\";\nimport { BookContext } from \"../contexts/BookContext\";\nimport { Link } from \"react-router-dom\";\n\nvar parseString = require(\"xml2js\").parseString;\n\nconst ChosenBook = () => {\n  const [book, setBook] = useContext(BookContext);\n  const [authy, setAuthy] = useContext(AuthyContext);\n  useEffect(() => {\n    let apiKey = \"ALVzK8NwSNC6KG0i7LIMgg\";\n    let authorId = authy;\n    const fetchData2 = async () => {\n      const result = await axios(\n        `https://www.goodreads.com/author/show/${authorId}?format=xml&key=${apiKey}`\n      );\n      let data2 = [];\n      let books2 = \"\";\n      let books3 = \"\";\n      let authorName = \"\";\n\n      const xml = result.data;\n      parseString(xml, function (err, result) {\n        books2 = result.GoodreadsResponse.author[0].about[0];\n        books3 = result.GoodreadsResponse.author[0].books[0].book;\n        authorName = result.GoodreadsResponse.author[0].name[0];\n\n        for (let i = 0; i < books3.length; i++) {\n          data2.push({\n            about_book: books3[i].description[0]\n              .replace(/<[^>]*>?/gm, \"\")\n              .replace(/(?:https?|ftp):\\/\\/[\\n\\S]+/g, \"\"),\n            averageRating: books3[i].average_rating[0],\n            bookImage: books3[i].image_url[0],\n            link: books3[i].link[0],\n            num_pages: books3[i].num_pages[0],\n            publication_year: books3[i].publication_year[0],\n            title: books3[i].title[0],\n            uri: books3[i].uri[0],\n            authors: result.GoodreadsResponse.author[0].name[0],\n            ratings_count: books3[i].ratings_count[0],\n          });\n        }\n        setData3(data2.filter((x) => x.title === book)[0]);\n      });\n\n      console.log(\n        books2\n          .replace(/<[^>]*>?/gm, \"\")\n          .replace(/(?:https?|ftp):\\/\\/[\\n\\S]+/g, \"\")\n      );\n\n      setAuthorName(authorName);\n      setData2(\n        books2\n          .replace(/<[^>]*>?/gm, \"\")\n          .replace(/(?:https?|ftp):\\/\\/[\\n\\S]+/g, \"\")\n      );\n    };\n\n    fetchData2();\n  }, [authy]);\n\n  const [data2, setData2] = useState([]);\n  const [data3, setData3] = useState([]);\n\n  const [authorName, setAuthorName] = useState([]);\n\n  return (\n    <div className=\"home\">\n      <br></br>\n      <Link as={Link} to={`/`}>\n        Home\n      </Link>\n      <div>\n        <br></br>\n        <Image src={data3.bookImage} />\n        <div>\n          <br></br>\n          {data3.title} by {authorName}\n        </div>\n        <br></br>\n\n        <div className=\"authorDescription\">\n          {data3.about_book\n            ? data3.about_book\n            : \"Sorry, there is no description for this book :(\"}\n        </div>\n\n        <br></br>\n        <div className=\"authorDescription\">\n          <b>Author(s):</b> {data3.authors}\n        </div>\n        <br></br>\n        <div className=\"authorDescription\">\n          <b>Publication Year:</b> {data3.publication_year}\n        </div>\n        <br></br>\n        <div className=\"authorDescription\">\n          <b>Page Count:</b> {data3.num_pages}\n        </div>\n        <br></br>\n        <div className=\"authorDescription\">\n          <b>Ratings Count</b> {data3.ratings_count}\n        </div>\n        <br></br>\n        <div className=\"authorDescription\">\n          <b>Average Rating:</b> {data3.averageRating}\n        </div>\n      </div>\n      <br></br>\n      <br></br>\n    </div>\n  );\n};\nexport default ChosenBook;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n//import axios from \"axios\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\nimport ChosenBook from \"./pages/ChosenBook\";\nimport { AuthyContext } from \"./contexts/AuthyContext\";\nimport { BookContext } from \"./contexts/BookContext\";\nimport { SearchContext } from \"./contexts/SearchContext\";\n\nconst App = () => {\n  const [authy, setAuthy] = useState();\n  const [book, setBook] = useState();\n  const [search, setSearch] = useState();\n\n  return (\n    <SearchContext.Provider value={[search, setSearch]}>\n      <AuthyContext.Provider value={[authy, setAuthy]}>\n        <BookContext.Provider value={[book, setBook]}>\n          <Router>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/:book\" component={ChosenBook} />\n            <Route render={() => <Redirect to={{ pathname: \"/\" }} />} />\n          </Router>\n        </BookContext.Provider>\n      </AuthyContext.Provider>\n    </SearchContext.Provider>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}